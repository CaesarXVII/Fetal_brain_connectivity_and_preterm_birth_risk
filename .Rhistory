summary(obs$T_ac[which(risk[,1] == "0")])
summary(T_ac[which(risk[,1] == "0")])
summary(T_ac[which(risk[,1] == "1")])
obs$T_ac
T_ac
length(obs$T_ac)
out$+
out$nets[[2]]
view(out$nets[[2]])
View(out$nets[[2]])
mean(obs$T_ac)
summary(obs$T_ac)
stud_res <- stud_perm_test(obs = T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
stud_res$p_val
stud_res <- stud_perm_test(obs = obs$T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
stud_res$stat_obs
stud_res_MEC <- stud_perm_test(obs = T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
stud_res <- stud_perm_test(obs = obs$T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
stud_res_MEC$stat_obs
stud_res$stat_obs
17(17-1)/2
17*(17-1)/2
17^2
272 + 17
summary(T_ac[which(risk[,1] == "1")] - obs$T_ac[which(risk[,1] == "1")])
summary(T_ac[which(risk[,1] == "0")] - obs$T_ac[which(risk[,1] == "0")])
save.image(file = "env_09_02_23.Rdata")
risk_status
ts_dim
which.min(ts_dim)
length(data_scaled)
dim(data_scaled[[1]])
ts_dim[which.min(ts_dim)]
red_datascaled <- sapply(X = data_scaled,FUN = function(x) x[1:87,])
red_datascaled <- sapply(X = data_scaled,FUN = function(x) x[1:87,])
red_datascaled <- lapply(X = data_scaled,FUN = function(x) x[1:87,])
length(red_datascaled)
dim(red_datascaled[[1]])
dim(red_datascaled[[2]])
sapply(X = red_datascaled, function(x) dim(x)[1])
library(CompareCausalNetworks)
library(igraph)
library(viridis)
library(pcalg)
source("Causal_mat.R")
source("Ahat_split.R")
source("Ahat_split_post.R")
source("perm_test.R")
n <- 31 #number of subjects
n_sim <- 20000 #permutations
seed <- 2356
alpha <- 0.05 #level of the permutation test
method
red_datascaled
method
red_out <- Causal_mat(data_scaled = red_datascaled,alpha = 0.05,seed = 1345,method = method)
red_obs <- MEC_to_obs(nets = red_out$nets)
red_obs
summary(red_obs$T_ac[which(risk[,1] == "1")])
summary(red_obs$T_ac[which(risk[,1] == "0")])
stud_res <- stud_perm_test(obs = red_obs$T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
stud_res <- stud_perm_test(obs = obs$T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
stud_res$p_val
red_stud_res <- stud_perm_test(obs = red_obs$T_ac,id_group = risk[,1],alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
red_stud_res$p_val
red_stud_res$stat_obs
id_lr <- which(risk[,1] == "0")
id_hr <- which(risk[,1] == "1")
length(id_lr)
length(id_hr)
ts_dim[id_hr]
ts_dim[id_lr]
id_lr
length(data_scaled[id_lr])
ts_dim[id_hr]
ts_dim[id_lr]
red_ds_lr <- lapply(X = data_scaled[id_lr],FUN = function(x) x[1:99,])
red_ds_hr <- lapply(X = data_scaled[id_hr],FUN = function(x) x[1:87,])
red_ds <- c(red_ds_lr,red_ds_hr)
length(red_ds)
class(risk[,1])
risk_[,1]
risk[,1]
prisk <- c(rep(0,19),rep(1,12))
prisk
sum(prisk)
length(red_ds)
method
method
r_out <- Causal_mat(data_scaled = red_ds,alpha = 0.05,seed = 1345,method = method)
rl_obs <- MEC_to_obs(nets = r_out$nets)
summary(rl_obs$T_ac[which(risk[,1] == "1")])
summary(rl_obs$T_ac[which(prisk == "1")])
summary(red_obs$T_ac[which(risk[,1] == "1")])
summary(rl_obs$T_ac[which(prisk == "1")])
summary(rl_obs$T_ac[which(prisk == "0")])
redp_stud_res <- stud_perm_test(obs = rl_obs$T_ac,id_group = prisk,alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
redp_stud_res$stat_obs
redp_stud_res$stat_obs
red_stud_res$stat_obs
redp_stud_res$p_val
summary(ts_dim[id_lr])
summary(ts_dim[id_hr])
sort(ts_dim[id_lr])
sort(ts_dim[id_hr])
id_hr
id_hr[-5]
rid_hr <- id_hr[-5] #without subject 8 (which means at least 113 observations)
ds_hr <- lapply(X = data_scaled[rid_hr],FUN = function(x) x[1:113,])
red_ds <- c(red_ds_lr,ds_hr)
length(red_ds)
looprisk <- c(rep(0,19),rep(1,11))
length(looprisk)
length(ds_hr)
length(red_ds)
loo_out <- Causal_mat(data_scaled = red_ds,alpha = 0.05,seed = 1345,method = method)
loobs <- MEC_to_obs(nets = loo_out$nets)
summary(loobs$T_ac[which(looprisk == "1")])
summary(rl_obs$T_ac[which(prisk == "1")])
summary(rl_obs$T_ac[which(prisk == "0")])
summary(loobs$T_ac[which(looprisk == "0")])
summary(loobs$T_ac[which(looprisk == "1")])
summary(loobs$T_ac[which(looprisk == "0")])
summary(rl_obs$T_ac[which(prisk == "1")])
summary(loobs$T_ac[which(looprisk == "1")])
loo_stud_res <- stud_perm_test(obs = rl_obs$T_ac,id_group = prisk,alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
summary(loobs$T_ac[which(looprisk == "1")])
summary(loobs$T_ac[which(looprisk == "0")])
loo_stud_res$stat_obs
loo_stud_res <- stud_perm_test(obs = loobs$T_ac,id_group = looprisk,alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
loo_stud_res$p_val
loo_stud_res$stat_obs
summary(rl_obs$T_ac[which(prisk == "0")])
summary(rl_obs$T_ac[which(prisk == "1")])
summary(loobs$T_ac[which(looprisk == "1")])
obs$T_ac[which(risk[,1] == "1")]
summary(obs$T_ac[which(risk[,1] == "1")])
summary(obs$T_ac[which(risk[,1] == "0")])
redp_stud_res$p_val
ts_dim[id_hr]
sort(ts_dim[id_hr])
sort(ts_dim[id_lr])
id_hr
id_lr
c_hr <- id_hr[-c(3,5,7)] #without subject 8,13 and 3 (which means at least 139 observations)
c_lr <- id_lr[-c(5,8,9,13)] #without subject 19, 24, 18, 11 (which means at least 138 observations)
sort(ts_dim[c_hr])
sort(ts_dim[c_lr])
cds_hr <- lapply(X = data_scaled[c_hr],FUN = function(x) x[1:139,])
cds_lr <- lapply(X = data_scaled[c_lr],FUN = function(x) x[1:138,])
length(cds_lr)
length(cds_hr)
c_ds <- c(cds_lr,cds_hr)
crisk <- c(rep(0,15),rep(1,9))
length(c_ds)
length(crisk)
method
c_out <- Causal_mat(data_scaled = c_ds,alpha = 0.05,seed = 1345,method = method)
cobs <- MEC_to_obs(nets = c_out$nets)
summary(cobs$T_ac[which(crisk == "1")])
summary(cobs$T_ac[which(crisk == "0")])
crisk
length(c_ds)
summary(loobs$T_ac[which(looprisk == "0")])
sort(ts_dim[id_lr])
ts_dim[id_lr]
c_lr <- id_lr[-c(9,13)] #without subject 19, 24 (which means at least 135 observations)
length(c_lr)
cds_lr <- lapply(X = data_scaled[c_lr],FUN = function(x) x[1:135,])
c_ds <- c(cds_lr,cds_hr)
length(c_ds)
crisk <- c(rep(0,17),rep(1,9))
summary(cobs$T_ac[which(crisk == "1")])
crisk <- c(rep(0,15),rep(1,9))
summary(cobs$T_ac[which(crisk == "1")])
crisk <- c(rep(0,17),rep(1,9))
length(c_ds)
c_out <- Causal_mat(data_scaled = c_ds,alpha = 0.05,seed = 1345,method = method)
cobs <- MEC_to_obs(nets = c_out$nets)
summary(cobs$T_ac[which(crisk == "1")])
summary(cobs$T_ac[which(crisk == "0")])
c_stud_res <- stud_perm_test(obs = cobs$T_ac,id_group = crisk,alternative = "less",alpha = 0.05,seed = seed,n_sim = n_sim,surplus = surplus)
c_stud_res$p_val
c_stud_res$stat_obs
c_stud_res$p_val
save.image(file = "env_09_02_23.Rdata")
load("H:/Documents/Unige shared/Research/Research files/Miglioli/University Research/Projects/Neuroimaging Project/Reservoir_neuro/env_09_02_23.Rdata")
ts_dim
dim(data_scaled)
length(data_scaled)
load("H:/Documents/Unige shared/Research/Research files/Miglioli/University Research/Projects/Neuroimaging Project/Reservoir_neuro/env_09_02_23.Rdata")
stud_res$stat_obs
stud_res$p_val
redp_stud_res$p_val
summary(motif_logistic_24)
rm(list = ls())
load("H:/Documents/Unige shared/Research/Research files/Miglioli/University Research/Projects/Neuroimaging Project/Reservoir_neuro/env_15_11.Rdata")
summary(motif_logistic_24)
motif_logistic_37 <- glm(formula = dic_y_final ~ subgraph, family = "binomial")
summary(motif_logistic_37)
options(scipen = 999)
summary(motif_logistic_37)
lm_motif <- lm(gw_ground_truth ~ subgraph)
summary(lm_motif)
subgraph
load("H:/Documents/Unige shared/Research/Research files/Miglioli/University Research/Projects/Neuroimaging Project/Reservoir_neuro/env_09_02_23.Rdata")
redp_stud_res$p_val
stud_res_MEC$p_val
length(T_ac)
length(obs$T_ac)
obs$T_ac
T_ac - obs$T_ac
risk[,1]
stud_res_MEC$p_val
stud_res$p_val
redp_stud_res$p_val
p_test_negative$p_val_noabs
n_sim
stud_res_MEC$p_val
stud_res$p_val
red_stud_res$p_val
redp_stud_res$p_val
load("H:/Documents/Unige shared/Research/Research files/Miglioli/University Research/Projects/Neuroimaging Project/Reservoir_neuro/env_09_02_23.Rdata")
redp_stud_res$p_val
stud_res$p_val
stud_res_MEC$p_val
load("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Reservoir_neuro/env_14_02_24.Rdata")
p_corr_compglo <- cor.test(hely_new$COMP_GLOBAL, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_compglo
p_corr_compglow <- cor.test(hely_new$COMP_GLOBAL_WEIGTHED, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_compglow
p_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_bwei
p_corr_sal <- cor.test(hely_new$`SGA -1_AGA 0_LGA 1`, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_sal
s_corr_compglo <- cor.test(hely_new$COMP_GLOBAL, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_compglow <- cor.test(hely_new$COMP_GLOBAL_WEIGTHED, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #two.sided above 0.05 but we know the correct direction.
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_sal <- cor.test(hely_new$`SGA -1_AGA 0_LGA 1`, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_compglo
s_corr_compglow
s_corr_bwei
s_corr_sal
install.packages("DescTools")
require(DescTools)
SpearmanRho(x = hely_new$COMP_GLOBAL,y = neuro_new,conf.level = 0.95)
SpearmanRho(x = hely_new$COMP_GLOBAL,y = neuro_new,conf.level = 0.95,use = "complete.obs")
s_corr_compglo
df_trial <- data.frame(hely_new$COMP_GLOBAL,neuro_new)
View(df_trial)
clean_data <- na.omit(df_trial)
View(clean_data)
SpearmanRho(x = clean_data$hely_new.COMP_GLOBAL,y = clean_data$neuro_new,conf.level = 0.95)
SpearmanRho(x = hely_new$COMP_GLOBAL,y = neuro_new,conf.level = 0.95,use = "complete.obs")
p_corr_compglo <- cor.test(hely_new$COMP_GLOBAL, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_compglo
s_corr_compglo <- cor.test(hely_new$COMP_GLOBAL, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_compglo
SpearmanRho(x = hely_new$COMP_GLOBAL,y = neuro_new,conf.level = 0.95,use = "complete.obs")
p_corr_compglow <- cor.test(hely_new$COMP_GLOBAL_WEIGTHED, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_compglow
s_corr_compglow <- cor.test(hely_new$COMP_GLOBAL_WEIGTHED, neuro_new,
alternative = c("greater"), #is there a preferred direction?
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr
s_corr_compglow
SpearmanRho(x = hely_new$COMP_GLOBAL_WEIGTHED,y = neuro_new,conf.level = 0.95,use = "complete.obs")
p_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_bwei
s_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #two.sided above 0.05 but we know the correct direction.
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_bwei
SpearmanRho(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE,y = neuro_new,conf.level = 0.95,use = "complete.obs")
p_corr_sal <- cor.test(hely_new$`SGA -1_AGA 0_LGA 1`, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_sal
s_corr_sal <- cor.test(hely_new$`SGA -1_AGA 0_LGA 1`, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_sal
SpearmanRho(x = hely_new$`SGA -1_AGA 0_LGA 1`,y = neuro_new,conf.level = 0.95,use = "complete.obs")
s_corr_bwei
s_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #two.sided above 0.05 but we know the correct direction.
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_bwei
SpearmanRho(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE,y = neuro_new,conf.level = 0.95,use = "complete.obs")
p_corr_bwei
p_corr_sal
grad_cav
length(grad_cav)
grad_cav_new <- grad_cav[positions]
new_rfsub
df_check
df_check <- data.frame(new_rfsub,grad_cav_new)
View(df_check)
require(openxlsx)
getwd()
write.xlsx(df_check, file = "gradient_check.xlsx")
load("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Reservoir_neuro/env_14_02_24.Rdata")
s_corr_bwei
load("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Reservoir_neuro/env_14_02_24.Rdata")
grad_cav
mafra_neuro
neuro_new
positions
grad_cav_new <- grad_cav[positions]
grad_cav_new
grad_cav
new_rfsub
require(DescTools)
help("SpearmanRho")
spearman_CI <- function(x, y, alpha = 0.05){
rs <- cor(x, y, method = "spearman", use = "complete.obs")
n <- sum(complete.cases(x, y))
sort(tanh(atanh(rs) + c(-1,1)*sqrt((1+rs^2/2)/(n-3))*qnorm(p = alpha/2)))
}
spearman_CI(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE,y = neuro_new,alpha = 0.05)
SpearmanRho(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE,y = neuro_new,conf.level = 0.95,use = "complete.obs")
s_corr_bwei
s_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #two.sided above 0.05 but we know the correct direction.
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
s_corr_bwei
install.packages("boot")
install.packages("boot")
require(boot)
# Define a function to compute Spearman correlation from a bootstrap sample
spearman_function <- function(data, indices) {
# Extract resampled data based on indices
d <- data[indices, ]
# Compute and return Spearman correlation
cor(d$x, d$y, method = "spearman",use = "complete.obs")
}
# Create a data frame of your data to use in the boot function
data <- data.frame(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE, y = neuro_new)
# Perform the bootstrap
set.seed(123) # for reproducibility
results <- boot(data, statistic = spearman_function, R = 1000) # R is the number of bootstrap replications
# Calculate confidence intervals from the bootstrap results
# Default is type = "perc" for percentile method, but you can change it
conf_int <- boot.ci(results, type = "bca")
conf_int
s_corr_bwei
SpearmanRho(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE,y = neuro_new,conf.level = 0.95,use = "complete.obs")
require(DescTools)
SpearmanRho(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE,y = neuro_new,conf.level = 0.95,use = "complete.obs")
cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("two.sided"), #two.sided above 0.05 but we know the correct direction.
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
p_corr_bwei
p_corr_bwei <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE, neuro_new,
alternative = c("less"), #is there a preferred direction?
method = "pearson",
conf.level = 0.95,
use = "complete.obs")
p_corr_bwei
plot(hely_new$IGC21_BIRTHWEIGHT_CENTILE,neuro_new)
load("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Reservoir_neuro/env_14_02_24.Rdata")
plot(hely_new$IGC21_BIRTHWEIGHT_CENTILE,neuro_new)
# Create a data frame of your data to use in the boot function
data <- data.frame(x = hely_new$IGC21_BIRTHWEIGHT_CENTILE, y = neuro_new)
View(data)
neuro_new[-23]
length(neuro_new[-23])
scorr_bwei_out <- cor.test(hely_new$IGC21_BIRTHWEIGHT_CENTILE[-23], neuro_new[-23],
alternative = c("less"), #two.sided above 0.05 but we know the correct direction.
method = "spearman",
conf.level = 0.95,
use = "complete.obs")
scorr_bwei_out
new_rfsub
100 - 74.19
100 - 83.87
load("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Reservoir_neuro/env_14_02_24.Rdata")
require(pROC)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.27,0.33),y = c(0.17,0.09), labels = c("MAFRA NEURO","MAFRA"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.27,0.33),y = c(0.17,0.09), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.27,0.40),y = c(0.17,0.09), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.27,0.33),y = c(0.17,0.09), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.27,0.33),y = c(0.20,0.09), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.27,0.33),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.33),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.31),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.35),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.34),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.345),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.345),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
par(pty="s")
roc(y_new ~ mafra_solo,plot=TRUE,add = FALSE,print.auc = TRUE,print.auc.y=0.4, col = "orange", legacy.axes = FALSE,lwd=4)#,main="ROC Curves")
roc(y_new ~ mafra_neuro,plot=TRUE,add = TRUE,print.auc = TRUE,print.auc.y=0.475, col = "blue",legacy.axes = FALSE,lwd=4)
legend(x = 0.55 ,y = 0.28 ,legend=c("",""),col=c("blue","orange"),box.lty=0,cex=0.4,lty=1,lwd=3,seg.len=1)
text(x = c(0.33,0.345),y = c(0.20,0.15), labels = c("MaFra-Neuro","MaFra-only"),col=c("black","black"), cex=1, font=2,pos = 3)
getwd()
setwd("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Fetal_brain_connectivity_and_preterm_birth_risk")
getwd()
load("C:/Users/Cesare/Desktop/Medical_projects/Neuroimaging_project/Reservoir_neuro/env_14_02_24.Rdata")
risk[,1]
ptb_risk <- c(1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 0 ,0 ,1, 0, 1, 1 ,1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0)
class(ptb_risk)
